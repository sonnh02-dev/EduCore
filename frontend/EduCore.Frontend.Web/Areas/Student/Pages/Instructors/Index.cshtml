@page
@using EduCore.Frontend.Web.ViewModels;
@model EduCore.Frontend.Web.Areas.Student.Pages.Instructors.ListModel
@{
    var cateId = (int?)ViewData["CateId"];
    var subCateId = (int?)ViewData["SubCateId"];
    var numberPage = (int?)ViewData["NumberPage"];
    var cateList = ViewData["Categories"] as List<CategoryViewModel>;
    var category = cateList.FirstOrDefault(c => c.CategoryId == cateId);
   

    Layout = "../../Shared/Layouts/Student/_Layout.cshtml";

}




<body>
    <style>
        .text-center {
            white-space: nowrap;
            overflow-x: auto;
        }

        .filter-button {
            display: inline-block;
        }

        .text-center p:first-child {
            display: flex;
            justify-content: start;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        .wrapper {
            padding: 30px;
            max-width: 1200px;
            margin: auto;
        }

        .h3 {
            font-weight: 900;
        }

        .views {
            font-size: 0.85rem;
        }

        .btn {
            color: #666;
            font-size: 0.85rem;
        }

            .btn:hover {
                color: #61b15a;
            }

        .green-label {
            background-color: #defadb;
            color: #48b83e;
            border-radius: 5px;
            font-size: 0.8rem;
            margin: 0 3px;
        }

        .radio,
        .checkbox {
            padding: 6px 10px;
        }

        .border {
            border-radius: 12px;
        }

        .options {
            position: relative;
            padding-left: 25px;
        }

        .radio label,
        .checkbox label {
            display: block;
            font-size: 14px;
            cursor: pointer;
            margin: 0;
        }

        .options input {
            opacity: 0;
        }

        .checkmark {
            position: absolute;
            top: 0px;
            left: 0;
            height: 20px;
            width: 20px;
            background-color: #f8f8f8;
            border: 1px solid #ddd;
            border-radius: 50%;
        }

        .options input:checked ~ .checkmark:after {
            display: block;
        }

        .options .checkmark:after {
            content: "";
            width: 9px;
            height: 9px;
            display: block;
            background: white;
            position: absolute;
            top: 52%;
            left: 51%;
            border-radius: 50%;
            transform: translate(-50%, -50%) scale(0);
            transition: 300ms ease-in-out 0s;
        }

        .options input[type="radio"]:checked ~ .checkmark {
            background: #61b15a;
            transition: 300ms ease-in-out 0s;
        }

            .options input[type="radio"]:checked ~ .checkmark:after {
                transform: translate(-50%, -50%) scale(1);
            }

        .count {
            font-size: 0.8rem;
        }

        label {
            cursor: pointer;
        }

        .tick {
            display: block;
            position: relative;
            padding-left: 23px;
            cursor: pointer;
            font-size: 0.8rem;
            margin: 0;
        }

            .tick input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
                height: 0;
                width: 0;
            }

        .check {
            position: absolute;
            top: 1px;
            left: 0;
            height: 18px;
            width: 18px;
            background-color: #f8f8f8;
            border: 1px solid #ddd;
            border-radius: 3px;
        }

        .tick:hover input ~ .check {
            background-color: #f3f3f3;
        }

        .tick input:checked ~ .check {
            background-color: #61b15a;
        }

        .check:after {
            content: "";
            position: absolute;
            display: none;
        }

        .tick input:checked ~ .check:after {
            display: block;
            transform: rotate(45deg) scale(1);
        }

        .tick .check:after {
            left: 6px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg) scale(2);
        }

        #country {
            font-size: 0.8rem;
            border: none;
            border-left: 1px solid #ccc;
            padding: 0px 10px;
            outline: none;
            font-weight: 900;
        }

        .close {
            font-size: 1.2rem;
        }

        div.text-muted {
            font-size: 0.85rem;
        }

        #sidebar {
            width: 25%;
            float: left;
        }

        .category {
            font-size: 0.9rem;
            cursor: pointer;
        }

        .list-group-item {
            border: none;
            padding: 0.3rem 0.4rem 0.3rem 0rem;
        }

        .badge-primary {
            background-color: #defadb;
            color: #48b83e
        }

        .brand .check {
            background-color: #fff;
            top: 3px;
            border: 1px solid #666;
        }

        .brand .tick {
            font-size: 1rem;
            padding-left: 25px;
        }

        .rating .check {
            background-color: #fff;
            border: 1px solid #666;
            top: 0;
        }

        .rating .tick {
            font-size: 0.9rem;
            padding-left: 25px;
        }

        .rating .fas.fa-star {
            color: #ffbb00;
            padding: 0px 3px;
        }

        .brand .tick:hover input ~ .check,
        .rating .tick:hover input ~ .check {
            background-color: #f9f9f9;
        }

        .brand .tick input:checked ~ .check,
        .rating .tick input:checked ~ .check {
            background-color: #61b15a;
        }

        #products {
            width: 75%;
            padding-left: 30px;
            margin: 0;
            float: right;
        }

        .card:hover {
            transform: scale(1.1);
            transition: all 0.5s ease-in-out;
            cursor: pointer;
        }

        .card-body {
            padding: 0.5rem;
        }

            .card-body .description {
                font-size: 0.78rem;
                padding-bottom: 8px;
            }

        div.h6,
        h6 {
            margin: 0;
        }

        .product .fa-star {
            font-size: 0.9rem;
        }

        .rebate {
            font-size: 0.9rem;
        }

        .btn.btn-primary {
            background-color: #48b83e;
            color: #fff;
            border: 1px solid #008000;
            border-radius: 10px;
            font-weight: 800;
        }

            .btn.btn-primary:hover {
                background-color: #48b83ee8;
            }

        img {
            width: 192px;
            height: 132px;
            object-fit: contain;
        }

        .clear {
            clear: both;
        }

        .btn.btn-success {
            visibility: hidden;
        }



        .h3 {
            font-size: 1.3rem;
        }

        #sidebar {
            display: none;
        }

        #products {
            width: 100%;
            float: none;
        }

        #products {
            padding: 0;
        }

        .clear {
            float: left;
            width: 80%;
        }

        .btn.btn-success {
            visibility: visible;
            margin: 10px 0px;
            color: #fff;
            padding: 0.2rem 0.1rem;
            width: 20%;
        }

        .green-label {
            width: 50%;
        }

        .btn.text-success {
            padding: 0;
        }

        .content,
        #mobile-filter {
            clear: both;
        }

        }
    </style>

    @* <div class="content py-md-0 py-3  row col-md-12"> *@

    @*     <div id="mobile-filter " class="col-md-2"> *@
    @*         <div class="py-3"> *@
    @*             <h5 class="font-weight-bold">Categories</h5> *@
    @*             <ul class="list-group"> *@
    @*                 @foreach (var c in cateList) *@
    @*                 { *@
    @*                     <li class="list-group-item list-group-item-action d-flex justify-content-between align-items-center category"> *@

    @*                         <a href="/Student/Instructor/List?cateId=@c.CategoryId"> *@
    @*                             <button id="btn_cate" onclick="setActiveButton('btn_cate')" class="filter-button px-3 py-2 mt-2 rounded-pill me-4 @(cateId == c.CategoryId ? "active" : "disactive")"> *@
    @*                                 @c.CategoryName <span class="badge text-muted bg-success ">@c.SubCategories.Count subcate</span> *@
    @*                             </button> *@
    @*                         </a> *@

    @*                     </li> *@
    @*                 } *@


    @*             </ul> *@
    @*         </div> *@
    @*         <div class="py-3"> *@
    @*             <h5 class="font-weight-bold">Brands</h5> *@
    @*             <form class="brand"> *@
    @*                 <div class="form-inline d-flex align-items-center py-1"> *@
    @*                     <label class="tick"> *@
    @*                         Royal Fields <input type="checkbox"> <span class="check"></span> *@
    @*                     </label> *@
    @*                 </div> *@
    @*                 <div class="form-inline d-flex align-items-center py-1"> *@
    @*                     <label class="tick"> *@
    @*                         Crasmas Fields <input type="checkbox" checked> <span class="check"></span> *@
    @*                     </label> *@
    @*                 </div> *@
    @*                 <div class="form-inline d-flex align-items-center py-1"> *@
    @*                     <label class="tick"> *@
    @*                         Vegetarisma Farm <input type="checkbox" checked> <span class="check"></span> *@
    @*                     </label> *@
    @*                 </div> *@
    @*                 <div class="form-inline d-flex align-items-center py-1"> *@
    @*                     <label class="tick"> *@
    @*                         Farmar Field Eve <input type="checkbox"> <span class="check"></span> *@
    @*                     </label> *@
    @*                 </div> *@
    @*                 <div class="form-inline d-flex align-items-center py-1"> *@
    @*                     <label class="tick"> *@
    @*                         True Farmar Steve <input type="checkbox"> <span class="check"></span> *@
    @*                     </label> *@
    @*                 </div> *@
    @*             </form> *@
    @*         </div> *@

    @*         <div class="py-3"> *@
    @*             <h5 class="font-weight-bold">Rating</h5> *@
    @*             <form class="rating"> *@
    @*                 @{ *@
    @*                     for (int rating = 5; rating >= 1; rating--) *@
    @*                     { *@
    @*                         <div class="form-inline d-flex align-items-center py-2"> *@
    @*                             <label class="tick"> *@
    @*                                 @{ *@
    @*                                     for (int i = 1; i <= rating; i++) *@
    @*                                     { *@
    @*                                         <span class="fas fa-star"></span> *@
    @*                                     } *@

    @*                                     for (int i = rating + 1; i <= 5; i++) *@
    @*                                     { *@
    @*                                         <span class="far fa-star px-1 text-muted"></span> *@
    @*                                     } *@
    @*                                 } *@
    @*                                 <input onclick="getListCourseByRating(@rating)" type="checkbox" id="ratingCheckbox_@rating"> <span class="check"></span> *@
    @*                             </label> *@
    @*                         </div> *@
    @*                     } *@
    @*                 } *@
    @*             </form> *@
    @*         </div> *@
    @*     </div> *@
    @*     <!---------------> *@

    @*     <div class="container col-md-10 p-0"> *@


    @*         <div class="text-center p-0"> *@
    @*             <p class="p-2 m-2 mb-0 d-flex justify-content-center align-items-center"> *@





    @*                 @foreach (var subCate in category.SubCategories) *@
    @*                 { *@
    @*                     <a href="/Student/Instructor/List?subCateId=@(subCate.SubCategoryId)"> *@
    @*                         <button id="btn_sub_cate@(subCate.SubCategoryId)" onclick="setActiveButton(@(subCate.SubCategoryId))" class="filter-button px-3 py-2 mt-2 rounded-pill me-4 @(subCateId == subCate.SubCategoryId ? "active" : "disactive")"> *@
    @*                             @subCate.SubCategoryName *@
    @*                         </button> *@
    @*                     </a> *@
    @*                 } *@
    @*             </p> *@
    @*         </div> *@


    @*         <div class="container"> *@
    @*             <div class="row " id="intructor_content"> *@
    @*                 @foreach (var i in @Model.Instructors) *@
    @*                 { *@
                
    @*                     <div class="m-2 p-2 col-md-3 col-sm-6 my-3 shadow-lg  rounded position-relative vesitable-item"> *@
    @*                         <div class="vesitable-img"> *@
    @*                             <a href="/Student/Instructor/Detail?insId=@i.UserId"> *@
    @*                             <img src="@i.UrlImage" class="img-fluid w-100 rounded" alt=""> *@
    @*                             </a> *@
    @*                         </div> *@
    @*                         @if (i.Rating >= (decimal)4.7) *@
    @*                         { *@
    @*                             <div class="text-white bg-primary px-3 py-1 rounded position-absolute" style="top: 10px; right: 10px;">Best instructor</div> *@

    @*                         } *@
    @*                         <div class="p-4 rounded-bottom"> *@
    @*                             <h4>@i.FullName</h4> *@

    @*                             <span> *@
    @*                                 @i.SubCategoryDetails.Select(sc => sc.SubCategoryName).Aggregate((s1, s2) => s1 + ", " + s2) *@
    @*                             </span> *@


    @*                             <div class=" mt-3 mb-1"> *@
    @*                                 <span class="badge text-muted bg-success d-inline">@i.NumberStudent students</span> *@
    @*                                 <span class="badge text-muted bg-success d-inline">@i.NumberCourse courses</span> *@
    @*                                 <span class="badge text-muted bg-success d-inline"> *@
    @*                                     @i.Rating<span> *@
    @*                                         <i class="fas fa-star text-primary"></i> *@
    @*                                     </span> rating *@
    @*                                 </span> *@

    @*                             </div> *@
    @*                         </div> *@
    @*                     </div> *@
                       
    @*                 } *@
    @*                 <div class="pagination d-flex justify-content-center align-items-center"> *@
    @*                     @for (int i = 1; i <= numberPage; i++) *@
    @*                     { *@
    @*                         string url = subCateId != null ? *@
    @*                         $"https://localhost:7004/api/Course/GetListCourseBySubCategoryId/{subCateId}?$skip={(i - 1) * 8}&$top=8" *@
    @*                         : $"https://localhost:7004/api/Course/GetListCourseByCategoryId/{cateId}?$skip={(i - 1) * 8}&$top=8"; *@

    @*                         if (i == numberPage) *@
    @*                         { *@
    @*                             <button id="page@i" onclick="getListCourseByApi('@url');setActivePage(@i)" class="filter-button px-3 py-2 mt-2 rounded-pill me-4 @(i == 1 ? "active" : "disactive")"> *@
    @*                                 Last *@
    @*                             </button> *@
    @*                         } *@
    @*                         else *@
    @*                         { *@
    @*                             <button id="page@i" onclick="getListCourseByApi('@url');setActivePage(@i)" class="filter-button px-3 py-2 mt-2 rounded-pill me-4 @(i == 1 ? "active" : "disactive")"> *@
    @*                                 @i *@
    @*                             </button> *@
    @*                         } *@
    @*                     } *@
    @*                 </div> *@
    @*             </div> *@


    @*         </div> *@










    @*     </div> *@



    @* </div> *@


    </div>




    @*  <section id="achivement" style="background-color: #f5f5f5;">
    <div class="container padding-medium">
    <div class="row">
    <div class="col-md-3">
    <div class="text-center">
    <img src="/images/topic.png" alt="img" class="img-fluid">
    <h4 class="py-2 mt-3 m-0">300+ Topics</h4>
    <p class="text-uppercase">choose your choice</p>
    </div>
    </div>
    <div class="col-md-3">
    <div class="text-center">
    <img src="/images/student.png" alt="img" class="img-fluid">
    <h4 class="py-2 mt-3 m-0">1000+ Students</h4>
    <p class="text-uppercase">bright future</p>
    </div>
    </div>
    <div class="col-md-3">
    <div class="text-center">
    <img src="/images/instruction.png" alt="img" class="img-fluid">
    <h4 class="py-2 mt-3 m-0">300+ Instructors</h4>
    <p class="text-uppercase">trained professionals</p>
    </div>
    </div>
    <div class="col-md-3">
    <div class="text-center">
    <img src="/images/award.png" alt="img" class="img-fluid">
    <h4 class="py-2 mt-3 m-0">120+ Awards</h4>
    <p class="text-uppercase">hard process</p>
    </div>
    </div>

    </div>
    </div>
    </section>

    @section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

    let selectedRating = null;
    let activingBtnId = null;
    var cateId = @Html.Raw(Json.Serialize(cateId));
    var subCateId = @Html.Raw(Json.Serialize(subCateId));
    let filterResult = @Html.Raw(Json.Serialize(@Model.Instructors));
    let numberPage =@Html.Raw(Json.Serialize(numberPage));




    function getListCourseByApi(url) {
    $.ajax({
    url: url,
    success: function (result) {
    console.log(result);
    if(result.length>0){
    numberPage= Math.ceil(result.length / 8);

    }
    displayListCourse(result);
    },
    error: function (xhr, status, error) {
    console.error(error);
    }
    });
    }


    function displayListCourse(courses) {
    let courseHtml = '';

    courses.slice(0, 8).forEach(function (course) {
    courseHtml += `
    <div class="col-md-3 col-sm-6 my-3">
    <div class="p-3 card h-100 shadow rounded-4 border-5 border-dark item digital">
    <div class="position-relative">
    <div class="position-absolute m-3">
    <span class="badge text-muted bg-primary">${course.duration}</span>
    </div>
    <a href="courses-details.html">
    <img src="${course.urlImage}" class="img-fluid rounded-3" alt="image">
    </a>
    </div>
    <div class="card-body p-0">
    <span class="badge text-muted bg-success mt-3 mb-1">${course.level}</span>
    <a href="courses-details.html">
    <h5 class="py-2 m-0">${course.title} - ${course.instructorName}</h5>
    </a>
    <div class="card-text">
    <span class="rating d-flex align-items-center mb-2">
    <h6 class="text-primary m-0 me-2">${course.rating}</h6>
    ${generateStars(course.rating)}
    <p class="text-primary m-0 me-2">(${course.ratingNumber} rating)</p>
    </span>
    <h4>
    ${course.priceAfterSale.toLocaleString()}đ
    <span class="fs-6 text-black opacity-25 text-decoration-line-through">
    ${course.price.toLocaleString()}đ
    </span>
    <span><h6 class="d-inline">-${course.sale}%</h6></span>
    </h4>
    <div class="d-flex flex-wrap mt-2">
    <a href="#" class="btn btn-outline-dark text-capitalize me-2 px-4 py-3">Enroll Now</a>
    <a href="#" class="btn btn-outline-dark text-capitalize me-2">
    <iconify-icon icon="mdi:heart-outline" class="fs-5 pt-1"></iconify-icon>
    </a>
    <a href="#" class="btn btn-outline-dark text-capitalize">
    <iconify-icon icon="mdi:cart-outline" class="fs-5 pt-1"></iconify-icon>
    </a>
    </div>
    </div>
    </div>
    </div>
    </div>`;
    });
    console.log(`Number Page=${numberPage}`);
    console.log(`subCateId=${subCateId}`);
    console.log(`cateId=${cateId}`);


    let paginationHtml = '';
    let url=`https://localhost:7004/api/Course`;

    for (let i = 1; i <= numberPage; i++) {
    if (subCateId != null && selectedRating == null) {
    url += `/GetListCourseBySubCategoryId/${subCateId}?$skip=${(i - 1) * 8}&$top=8`;

    } else if (selectedRating != null) {
    url+=  subCateId!=null?`/GetListCourseBySubCategoryId/${subCateId}?$filter=Rating ge ${selectedRating}&$skip=${(i - 1) * 8}&$top=8&$orderBy=Rating`:
    `/GetListCourseByCategoryId/${cateId}?$filter=Rating ge ${selectedRating}&$skip=${(i - 1) * 8}&$top=8&$orderBy=Rating`;
    } else {
    url += `/GetListCourseByCategoryId/${cateId}?$skip=${(i - 1) * 8}&$top=8`;
    }
    console.log(url);
    paginationHtml += i == numberPage ? `
    <button id="page${i}" onclick="getListCourseByApi('${url}'); setActivePage(${i})" class="filter-button px-3 py-2 mt-2 rounded-pill me-4 ${i == 1 ? "active" : "disactive"}">
    Last
    </button>` : `
    <button id="page${i}" onclick="getListCourseByApi('${url}'); setActivePage(${i})" class="filter-button px-3 py-2 mt-2 rounded-pill me-4 ${i == 1 ? "active" : "disactive"}">
    ${i}
    </button>`;
    }

    $('#courses_content').html(courseHtml + paginationHtml);


    var buttons = document.querySelectorAll('.filter-button');

    buttons.forEach(function (button) {
    button.classList.remove('active');
    button.classList.add('inactive');
    });

    var activeButton = document.getElementById(activingBtnId);
    if (activeButton) {
    activeButton.classList.remove('inactive');
    activeButton.classList.add('active');
    }
    }

    function getListCourseByRating(rating) {
    if (selectedRating !== null && selectedRating !== rating) {
    document.getElementById('ratingCheckbox_' + selectedRating).checked = false;
    }
    selectedRating = rating;
    console.log(selectedRating);
    console.log(`length filter rating=${filterResult.length}`);

    let url = `https://localhost:7004/api/Course`;
    url += subCateId != null
    ? `/GetListCourseBySubCategoryId/${subCateId}?$filter=Rating ge ${selectedRating}&$orderBy=Rating`
    : `/GetListCourseByCategoryId/${cateId}?$filter=Rating ge ${selectedRating}&$orderBy=Rating`;


    getListCourseByApi(url);

    }



    function setActiveButton(buttonId) {
    console.log("Button clicked:", buttonId);

    var buttons = document.querySelectorAll('.filter-button');

    buttons.forEach(function (button) {
    button.classList.remove('active');
    button.classList.add('inactive');
    });

    var activeButton = document.getElementById(buttonId);
    console.log("Active button value:", activeButton.value);

    activeButton.classList.remove('inactive');
    activeButton.classList.add('active');
    activingBtnId = buttonId;

    if (buttonId === "btn_cate") {
    cateId = activeButton.value;
    subCateId = null;
    } else {
    subCateId = activeButton.value;
    }
    }

    function setActivePage(pageNumber) {
    $('.pagination .filter-button').removeClass('active').addClass('inactive');
    $('#page' + pageNumber).removeClass('inactive').addClass('active');
    console.log("Active page set to:", pageNumber);
    }



    function generateStars(rating) {
    let floorStars = Math.floor(rating);
    let halfStar = rating % 1 >= 0.5;
    let totalStars = 5;
    let starsHtml = '';

    for (let i = 0; i < floorStars; i++) {
    starsHtml += '<i class="fas fa-star text-primary"></i>';
    }

    if (halfStar) {
    starsHtml += '<i class="fas fa-star-half-alt text-primary"></i>';
    }

    for (let i = 0; i < totalStars - (floorStars + (halfStar ? 1 : 0)); i++) {
    starsHtml += '<i class="far fa-star text-primary"></i>';
    }

    return starsHtml;
    }
    </script>



    }



    @* <script>
    function GetListCourseBySubCateId(subCateId) {
    var url = categoryId ? `/api/Category/GetListCourseBySubCategoryId/${subCateId}` : '/api/Category';
    $.ajax({
    url: url,
    type: 'GET',
    success: function (result) {
    $('#category-content').html(`<h3>${result.name}</h3><p>Content for category ${result.name}</p>`);
    },
    error: function (xhr, status, error) {
    console.error(error);
    }
    });
    }
    // var connection = new signalR.HubConnectionBuilder().withUrl("/movieHub").build();
    // connection.start();
    // function onDelete(movieId) {
    //     connection.invoke("DeleteMovie", movieId);
    // }
    // connection.on("LoadMovie", (deleteId) => {
    //     const element = document.getElementById(deleteId);
    //     element.remove();
    //     //location.reload();
    // });
    </script> *@
</body>